
syntax = "proto3";

package tbox.net;

enum Messagetype
{
	REQUEST_RESPONSE_NONE = 0;              //no use,just for remove 0 in the enum
	REQUEST_HEARTBEAT_SIGNAL = 1;            //heartbeat signal
	RESPONSE_HEARTBEAT_RESULT = 2;           //heartbeat call back
	REQUEST_NETWORK_SIGNAL_STRENGTH = 3;   //ivi request tbox network signal strength; no topmessage's field
	RESPONSE_NETWORK_SIGNAL_STRENGTH = 4;  	//tbox response network signal strength; topmessage's field: signal_type signal_power
	REQUEST_CALL_ACTION = 5;               	//ivi request tbox a call action; topmessage's field: call_action
	RESPONSE_CALL_ACTION_RESULT = 6;        //tbox response ivi a call action result; topmessage's field: call_result
	RESPONSE_CALL_STATUS = 7;				//tbox report a call action status; topmessage's field: call_status
	REQUEST_TBOX_INFO = 8;					//ivi request tbox info; no topmessage's field
	RESPONSE_TBOX_INFO = 9;					//tbox response tbox info; topmessage's field: tbox_info
	REQUEST_WIFI_GET_STATUS = 10;			//ivi request wifi status; no topmessage's field
	RESPONSE_WIFI_STATUS = 11;				//tbox response wifi status; topmessage's field: wifi_status
	REQUEST_SETUP_WIFI = 12;				//ivi request setup tbox wifi; topmessage's field: wifi_set_cmd
	RESPONSE_WIFI_SETUP_RESULT = 13;		//tbox response wifi setup result; topmessage's field: wifi_set_result
	REQUEST_WIFI_MACADDRESS = 14;				//ivi request get TBOX mac address
	RESPONSE_WIFI_MACADDRESS_RESULT = 15;		//tbox response mac address
	REQUEST_WIFI_CLIENT_LIST = 16;				//ivi request get TBOX mac address
	RESPONSE_WIFI_CLIENT_LIST_RESULT = 17;		//tbox response mac address	
	REQUEST_TBOX_GPS_SET = 18;				//ivi request GPS set
	RESPONSE_TBOX_GPS_SET_RESULT = 19;      //ivi response GPS set
	RESPONSE_TBOX_GPSINFO_RESULT = 20;		//tbox response gps nmea		
	REQUEST_CERTIFICATION = 21;             //IVI certification
	RESPONSE_CERTIFICATION_RESULT = 22;     //tbox response certification
	
}

enum SignalType
{
	NONE_SIGNAL	= 0; 	// no signal
	GSM = 1; 			//2G
	UMTS = 2; 			//3G
	LTE = 3; 			//4G
}

enum CallType
{
	ECALL = 0;
	BCALL = 1;
	ICALL = 2;
}

enum CallActionEnum
{
	START_CALL = 0; // start a CALL
	END_CALL = 1; // end current CALL
}

enum CallActionResultEnum
{
	CALL_ACTION_SUCCESS = 0; 					   //request action success
	CALL_ACTION_NONSUPPORT = 1;                //nonsupport the call
	START_FAILED_CALL_PROCESSING = 2; //start call failed because now a call is processing
	START_FAILED_OTHER_ERROR = 3;      //start call failed because other reasons
	END_FAILED_NO_CURRENT_CALL = 4;    //end current call failed because now no call
	END_FAILED_OTHER_ERROR = 5;		   //end current call failed because other reasons
}

enum CallStatusEnum
{
	CALL_IN = 0;    //来电
	CALL_OUT = 1;   //去电  
	CALL_RING = 2;       //振铃
	CALL_CONNECTED = 3;  //接通
	CALL_DISCONNECTED = 4; //挂断
}

message CallAction
{
	CallType type = 1;
	CallActionEnum action = 2;
}

message CallActionResult
{
	CallType type = 1;
	CallActionEnum action = 2;
	CallActionResultEnum result = 3;
}

message CallStatus
{
	CallType type = 1;
	CallStatusEnum call_status = 2;
	bytes reserve = 3;
}

message TboxInfo
{
	string software_version = 1;
	string hardware_version = 2;
	string iccid = 3;
	string pdid = 4;
	string imei = 5;
	string vin  = 6;
}

enum Hemisphere
{
	NORTH_LATI = 0;
	SOUTH_LATI = 1;
	EAST_LONGI = 2;
	WEST_LONGI = 3;
}

enum GPS_SEND_OnOff
{
	GPS_ON = 0;      //start GPS info send to IVI
	GPS_OFF = 1;     //stop
	GPS_ONCE = 2;    //Only send the GPS info for one time
}

message TboxGPSCmd
{
	GPS_SEND_OnOff onoff = 1;
	uint32 time_cycle = 2;  
}

message TboxGPSInfo
{
	string nmea = 1;
}

message TboxWifiClientInfo
{
    bytes hostname =1;
	string ip =2;
	string mac =3;
}

enum WifiBandwidth
{
	BANDWIDTH_2G = 0;      //2.4G
	BANDWIDTH_5G = 1;      //5G
}

message WifiStatus
{
	bool wifi_enabled = 1; //true:wifi enable, flase: wifi disable
	bytes wifi_ap_ssid = 2; //wifi ssid
	string wifi_ap_password = 3; //wifi ap password, empty or "" means no password
	WifiBandwidth wifi_ap_bandwidth = 4;  //wifi bandwidth
	uint32 wifi_ap_maxlinks = 5; //wifi max links
	string wifi_app_macaddress = 6;  //wifi MAC address
	repeated TboxWifiClientInfo wifi_client_list = 7 ; //wifi client list
}

enum WifiSetCmdEnum
{
	WIFI_ENABLE = 0;
	WIFI_AP_SSID = 1;
	WIFI_AP_PASSWORD = 2;
	WIFI_AP_BANDWIDTH = 3;
	WIFI_AP_MAXLINKS = 4;
}

message WifiSetCmd
{
	WifiSetCmdEnum cmd = 1;
	WifiStatus cmd_para_value = 2;
}

message WifiSetResult
{
	WifiSetCmdEnum cmd = 1;
	WifiStatus stauts = 2;
}

enum CertificationCmdEum
{
	CLIENTHELLO = 0;
	SERVICESENDCERTIFICATION = 1;
	CLIENTSENDCERTIFICATION = 2;
	SERVICEFINISHED = 3;
	CLIENTFINISHED = 4;
}

enum Sym_Enc
{
	SYM_ENC_NONE = 0;
	SYM_ENC_AES256_CBC = 1;
	SYM_ENC_3DES = 2;
	SYM_ENC_IDEA = 3;
}

message ClientHello
{
	Sym_Enc mode = 1;
	int32 random = 2;    
}

message ClientSendCertificate
{
	int32 random = 1;
	bytes SHA256 = 2;
	bytes N512 = 3;
}

message ClientFinish
{
	bytes DECODED = 1;
}

message CertificationStep
{
    ClientHello start =1;
	ClientSendCertificate sent =2;
	ClientFinish finsh =3;
}

message CertificationCmd
{
	CertificationCmdEum cmd = 1;
	CertificationStep cmd_para_value = 2;
}


message ServerSendCertificate
{
	int32 random =1;
	bytes tbox_certificate =2;
}

message ServerFinish
{
	bytes DECODED = 1;
}

message CertificationStatus
{
	ServerSendCertificate send =1;
	ServerFinish finish =2;
}
message CertificationResult
{
	CertificationCmdEum cmd = 1;
	CertificationStatus status = 2;
}

message MsgResult
{
	bool result =1;  //true:success    flase:failed
	bytes error_code = 2;  //none-error, dealing with failures and so on
}

message TopMessage
{
	Messagetype message_type = 1; 		//message type
	SignalType signal_type = 2;  		//current signal type
	int32 signal_power = 3;				//current signal strength, 0-5, 0 means no signal, 5 means strong strength
	CallAction call_action = 4;
	CallStatus call_status = 5;
	CallActionResult call_result = 6;
	TboxInfo tbox_info = 7;
	WifiSetCmd wifi_set_cmd = 8;
	WifiStatus wifi_status = 9;
	WifiSetResult wifi_set_result = 10;
	TboxGPSCmd tbox_gps_ctrl = 11;
	TboxGPSInfo tbox_gpsinfo = 12;
	CertificationCmd Certification_ctrl = 13;
	CertificationResult Certification_result = 14;
	MsgResult msg_result = 15;
}







